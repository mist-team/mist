# data file for the Fltk User Interface Designer (fluid)
version 1.0104 
header_name {.h} 
code_name {.cpp}
decl {\#include "image_test.h"} {public
} 

class image_test_window {open
} {
  Function {image_test_window()} {open
  } {
    Fl_Window main_window {open
      xywh {337 190 551 566} type Double visible
    } {
      Fl_Group {} {
        xywh {5 30 540 530} box DOWN_BOX
      } {
        Fl_Box draw_area {
          label label selected
          xywh {10 35 530 520} box FLAT_BOX color 40
          class image_draw_area
        }
      }
      Fl_Menu_Bar {} {
        xywh {0 0 550 25} box FLAT_BOX
      } {
        submenu {} {
          label {&File}
          xywh {0 0 100 20}
        } {
          submenu {} {
            label {&Open} open
            xywh {0 0 100 20}
          } {
            menuitem {} {
              label {Open &Image}
              callback {const char *filename = fl_file_chooser( "Open Image", "Image File (*.{jpg,jpeg,bmp,tif,tiff,png,pbm,pgm,ppm,pnm})", "" );
if( filename == NULL ) return;

read_image_test( filename );

draw_area->redraw( );
Fl::wait( 0 );}
              xywh {5 5 100 20}
              code0 {\#include <FL/Fl_File_Chooser.H>}
            }
            menuitem {} {
              label {Open &DICOM}
              callback {const char *filename = fl_file_chooser( "Open DICOM", "DICOM File (*)", "" );
if( filename == NULL ) return;

read_dicom_test( filename );

draw_area->redraw( );
Fl::wait( 0 );}
              xywh {15 15 100 20}
            }
          }
          submenu {} {
            label {&Save} open
            xywh {10 10 100 20} divider
          } {
            menuitem {} {
              label {Save &Image}
              xywh {15 15 100 20}
            }
            menuitem {} {
              label {Save &DICOM}
              callback {const char *filename = fl_file_chooser( "Save DICOM", "DICOM File (*.*)", "" );
if( filename == NULL ) return;

write_dicom_test( filename );}
              xywh {25 25 100 20}
            }
          }
          menuitem {} {
            label {&Exit}
            callback {main_window->hide( );}
            xywh {0 0 100 20}
          }
        }
        submenu {} {
          label {&Edit}
          xywh {0 0 100 20}
        } {
          menuitem {} {
            label {Euclidean Distance Transform}
            callback {euclidean_distance_transform_test( );}
            xywh {0 0 100 20}
          }
          menuitem {} {
            label {Figure Decomposition}
            callback {figure_decomposition_test( );}
            xywh {10 10 100 20}
          }
          menuitem {} {
            label Thresholding
            callback {thresholding_test( );}
            xywh {20 20 100 20}
          }
          menuitem {} {
            label {Labeling 4}
            callback {labeling4_test( );}
            xywh {20 20 100 20}
          }
          menuitem {} {
            label {Labeling 8}
            callback {labeling8_test( );}
            xywh {30 30 100 20}
          }
          menuitem {} {
            label Thinning
            callback {thinning_test( );}
            xywh {40 40 100 20}
          }
          menuitem {} {
            label Median
            callback {median_test( );}
            xywh {90 90 100 20}
          }
          menuitem {} {
            label Erosion
            callback {erosion_test( );}
            xywh {50 50 100 20}
          }
          menuitem {} {
            label Dilation
            callback {dilation_test( );}
            xywh {60 60 100 20}
          }
          menuitem {} {
            label Opening
            callback {opening_test( );}
            xywh {70 70 100 20}
          }
          menuitem {} {
            label Closing
            callback {closing_test( );}
            xywh {80 80 100 20}
          }
          menuitem {} {
            label {Reso up with nearest}
            callback {interpolate_test( 0, true );}
            xywh {90 90 100 20}
          }
          menuitem {} {
            label {Reso up with linear}
            callback {interpolate_test( 1, true );}
            xywh {100 100 100 20}
          }
          menuitem {} {
            label {Reso up with cubic}
            callback {interpolate_test( 2, true );}
            xywh {110 110 100 20}
          }
          menuitem {} {
            label {Reso down with nearest}
            callback {interpolate_test( 0, false );}
            xywh {100 100 100 20}
          }
          menuitem {} {
            label {Reso down with linear}
            callback {interpolate_test( 1, false );}
            xywh {110 110 100 20}
          }
          menuitem {} {
            label {Reso down with cubic}
            callback {interpolate_test( 2, false );}
            xywh {120 120 100 20}
          }
        }
      }
    }
  }
  Function {show( )} {open return_type void
  } {
    code {main_window->show( );} {}
  }
} 
