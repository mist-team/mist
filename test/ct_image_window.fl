# data file for the Fltk User Interface Designer (fluid)
version 1.0106 
header_name {.h} 
code_name {.cpp}
class parameter_window {} {
  Function {parameter_window()} {open
  } {
    Fl_Window param_window {
      label {Open Slice Parameter} open
      xywh {184 389 391 105} type Double hide modal
    } {
      Fl_Value_Input width {
        label {X size :}
        xywh {55 10 50 25} labeltype ENGRAVED_LABEL labelfont 8 when 4 maximum 1000 value 512
      }
      Fl_Value_Input height {
        label {Y size :}
        xywh {55 40 50 25} labeltype ENGRAVED_LABEL labelfont 8 maximum 1000 value 512
      }
      Fl_Value_Input depth {
        label {Z size :}
        xywh {55 70 50 25} labeltype ENGRAVED_LABEL labelfont 8 maximum 1000 value 400
      }
      Fl_Value_Input sizeX {
        label {Real X :}
        xywh {170 10 50 25} labeltype ENGRAVED_LABEL labelfont 8 maximum 100 value 0.625
      }
      Fl_Value_Input sizeY {
        label {Real Y :}
        xywh {170 40 50 25} labeltype ENGRAVED_LABEL labelfont 8 maximum 100 value 0.625
      }
      Fl_Value_Input sizeZ {
        label {Real Z :}
        xywh {170 70 50 25} labeltype ENGRAVED_LABEL labelfont 8 maximum 100 value 1
      }
      Fl_Value_Input offset {
        label {CT offset :}
        xywh {315 10 65 25} labeltype ENGRAVED_LABEL labelfont 8 minimum -2000 maximum 7999
      }
      Fl_Return_Button OK {
        label OK
        callback {val = 1;}
        xywh {235 60 70 35} labelsize 16
      }
      Fl_Button Cancel {
        label Cancel
        callback {val = 0;}
        xywh {310 60 70 35} labelsize 16
      }
    }
    code {val = -1;} {}
  }
  decl {int val;} {}
  Function {value()} {open return_type int
  } {
    code {return(val);} {}
  }
  Function {hide()} {open
  } {
    code {param_window->hide();} {}
  }
  Function {show()} {open return_type bool
  } {
    code {param_window->show();} {}
    code {while(value()<0) Fl::wait(0);} {}
    code {hide( );} {}
    code {Fl::wait(0);} {}
    code {return( value( ) ? true : false );} {}
  }
} 

class ct_image_window {open
} {
  Function {ct_image_window( )} {open
  } {
    Fl_Window image_window {open
      xywh {495 473 421 528} type Double visible
    } {
      Fl_Group {} {open
        xywh {5 30 410 410} box PLASTIC_DOWN_FRAME
      } {
        Fl_Box ct_image {
          label label
          xywh {10 35 400 400} box FLAT_BOX color 39
          code0 {\#include "raw_test.h"}
          class ct_draw_area
        }
      }
      Fl_Menu_Bar {} {open
        xywh {0 0 100 25} box FLAT_BOX
      } {
        submenu {} {
          label {&File} open
          xywh {0 0 100 20}
        } {
          menuitem {} {
            label {&Open}
            callback {ct_image->read_image( this );}
            xywh {0 0 100 20}
          }
          menuitem {} {
            label {&Save}
            callback {ct_image->write_image( this );}
            xywh {10 10 100 20}
          }
        }
        submenu {} {
          label {&Edit} open
          xywh {0 0 100 20}
        } {
          menuitem {} {
            label {&Median Filter 1D}
            callback {ct_image->median_filter1D( this );}
            xywh {30 30 100 20}
          }
          menuitem {} {
            label {&Median Filter 2D}
            callback {ct_image->median_filter2D( this );}
            xywh {20 20 100 20}
          }
          menuitem {} {
            label {&Median Filter 3D}
            callback {ct_image->median_filter3D( this );}
            xywh {10 10 100 20}
          }
          menuitem {} {
            label {&Normalization Filter 3D}
            callback {ct_image->normalization_filter3D( this );}
            xywh {20 20 100 20}
          }
          menuitem {} {
            label {&Euclidean Distance Transform}
            callback {ct_image->euclidean_distance_transform( this );}
            xywh {20 20 100 20}
          }
          menuitem {} {
            label {Labeling 6}
            callback {ct_image->labeling6( this );}
            xywh {30 30 100 20}
          }
          menuitem {} {
            label {Labeling 26}
            callback {ct_image->labeling26( this );}
            xywh {40 40 100 20}
          }
          menuitem {} {
            label {Thinning 6}
            callback {ct_image->thinning6( this );}
            xywh {40 40 100 20}
          }
          menuitem {} {
            label {Thinning 26}
            callback {ct_image->thinning26( this );} selected
            xywh {50 50 100 20}
          }
          menuitem {} {
            label Erosion
            callback {ct_image->erosion( this );}
            xywh {50 50 100 20}
          }
          menuitem {} {
            label Dilation
            callback {ct_image->dilation( this );}
            xywh {60 60 100 20}
          }
          menuitem {} {
            label Opening
            callback {ct_image->opening( this );}
            xywh {70 70 100 20}
          }
          menuitem {} {
            label Closing
            callback {ct_image->closing( this );}
            xywh {80 80 100 20}
          }
          menuitem {} {
            label {Figure Decomposition}
            callback {ct_image->figure_decomposition( this );}
            xywh {90 90 100 20}
          }
        }
      }
      Fl_Value_Slider WL {
        label WL
        callback {ct_image->change_window_level( o->value( ) );}
        xywh {40 470 375 20} type Horizontal box PLASTIC_THIN_DOWN_BOX align 4 minimum -2000 maximum 7000 step 1 value 40
      }
      Fl_Value_Slider WW {
        label WW
        callback {ct_image->change_window_width( o->value( ) );}
        xywh {40 495 375 20} type Horizontal box PLASTIC_THIN_DOWN_BOX align 4 minimum 1 maximum 4000 step 1 value 300
      }
      Fl_Value_Slider Indx {
        label Indx
        callback {ct_image->change_index( static_cast< int >( o->value( ) ) );}
        xywh {40 445 375 20} type Horizontal box PLASTIC_THIN_DOWN_BOX align 4 step 1
      }
      Fl_Progress progress_bar {
        xywh {115 5 300 20} box PLASTIC_THIN_UP_BOX selection_color 1 hide
      }
    }
  }
  Function {show()} {open return_type void
  } {
    code {image_window->show();} {}
  }
} 
